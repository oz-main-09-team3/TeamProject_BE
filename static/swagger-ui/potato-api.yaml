openapi: 3.0.1
info:
  title: Potato API
  version: "1.0.0"
  description: 감자 API 명세서
security:
  - bearerAuth: []
paths:
  /api/auth/login/{provider}/:
    post:
      summary: 소셜 로그인 (authorization code → JWT 발급)
      tags:
        - Auth Login
      parameters:
        - in: path
          name: provider
          required: true
          schema:
            type: string
            enum: [kakao, google, naver]
          description: 사용할 소셜 로그인 제공자
      requestBody:
        description: OAuth authorization code 및 redirect URI
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuthLoginRequest'
      responses:
        '200':
          description: 로그인 성공 (토큰 및 사용자 정보 반환)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuthLoginResponse'
        '400':
          description: 잘못된 요청 또는 로그인 실패
        '500':
          description: 서버 오류
  /api/auth/logout/:
    post:
      summary: 소셜 로그아웃
      tags:
        - Auth Login
      security:
        - bearerAuth: []
      responses:
        '204':
          description: 로그아웃 성공 (응답 본문 없음)
        '401':
          description: 인증 필요
        '500':
          description: 서버 오류
  /api/users/me/:
    get:
      summary: 내 정보 조회
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 내 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: 인증 필요
        '500':
          description: 서버 오류
    delete:
      summary: 회원 탈퇴
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '204':
          description: 회원 탈퇴 성공 (응답 본문 없음)
        '401':
          description: 인증 필요
        '500':
          description: 서버 오류
  /api/users/me/update/:
    patch:
      summary: 내 정보 수정
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        description: 수정할 사용자 정보 (multipart/form-data)
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
      responses:
        '200':
          description: 내 정보 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: 잘못된 요청
        '401':
          description: 인증 필요
        '500':
          description: 서버 오류
  /api/qrcode/:
    get:
      summary: QR 코드 이미지 생성
      tags:
        - QR
      parameters:
        - name: username
          in: query
          required: true
          schema:
            type: string
          description: QR로 변환할 데이터
      responses:
        '200':
          description: QR 코드 이미지 반환
          content:
            image/png:
              schema:
                type: string
                format: binary
        '400':
          description: 잘못된 요청
        '500':
          description: 서버 오류
  /api/diary/: # GET, POST
    get:
      tags:
        - Diary
      summary: 일기 전체 조회
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiaryResponse'
        '400':
          description: 잘못된 요청
        '404':
          description: 리소스 없음
        '500':
          description: 서버 오류
    post:
      tags:
        - Diary
      summary: 일기 작성
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiaryCreateRequest'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiaryResponse'
        '400':
            description: 잘못된 요청
        '404':
          description: 리소스 없음
        '500':
          description: 서버 오류
  /api/diary/{diary_id}/: # GET, PATCH, DELETE
    get:
      tags:
        - Diary
      summary: 일기 상세 조회
      parameters:
        - name: diary_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiaryDetailResponse'
        '400':
          description: 잘못된 요청
        '404':
          description: 리소스 없음
        '500':
          description: 서버 오류
    patch:
      tags:
        - Diary
      summary: 일기 수정
      parameters:
        - name: diary_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiaryUpdateRequest'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiaryResponse'
        '400':
          description: 잘못된 요청
        '500':
          description: 서버 오류
    delete:
      tags:
        - Diary
      summary: 일기 삭제 (실제 삭제가 아닌 is_deleted = true)
      parameters:
        - name: diary_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: 잘못된 요청
        '404':
          description: 일기 없음
        '500':
          description: 서버 오류
  /api/diary/{diary_id}/images/: # GET, POST
    get:
      tags:
        - Diary Image
      summary: 일기 이미지 목록 조회
      parameters:
        - name: diary_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiaryImageResponse'
        '400':
          description: 잘못된 요청
        '404':
          description: 리소스 없음
        '500':
          description: 서버 오류
    post:
      tags:
        - Diary Image
      summary: 일기 이미지 업로드
      parameters:
        - name: diary_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiaryImageResponse'
        '400':
          description: 잘못된 요청
        '404':
          description: 리소스 없음
        '500':
          description: 서버 오류
  /api/diary/{diary_id}/images/{diary_image_id}/: # DELETE
    delete:
      tags:
        - Diary Image
      summary: 일기 이미지 삭제 (실제 삭제가 아닌 is_deleted = true)
      parameters:
        - name: diary_id
          in: path
          required: true
          schema:
            type: integer
        - name: diary_image_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: 잘못된 요청
        '404':
          description: 리소스 없음
        '500':
          description: 서버 오류
  /api/diary/calendar/: # GET
    get:
      tags:
        - Diary Calendar
      summary: 한 달 동안의 날짜별 대표 감정(이모지+색상)과 일기 ID를 달력 UI용으로 조회
      parameters:
        - name: year
          in: query
          required: true
          schema:
            type: integer
        - name: month
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CalendarResponse'
        '400':
          description: 잘못된 요청
        '404':
          description: 리소스 없음
        '500':
          description: 서버 오류
  /api/diary/{diary_id}/comments/:
    get:
      tags:
        - Diary Comments
      summary: 일기 댓글 목록 조회
      parameters:
        - name: diary_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentResponse'
        '400':
          description: 잘못된 요청
        '404':
          description: 일기 없음
        '500':
          description: 서버 오류
    post:
      tags:
        - Diary Comments
      summary: 일기 댓글 작성
      parameters:
        - name: diary_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentCreateRequest'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponse'
        '400':
          description: 잘못된 요청
        '404':
          description: 일기 없음
        '500':
          description: 서버 오류
  /api/diary/{diary_id}/comments/{comment_id}/:
    patch:
      tags:
        - Diary Comments
      summary: 댓글 수정
      parameters:
        - name: diary_id
          in: path
          required: true
          schema:
            type: integer
        - name: comment_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentUpdateRequest'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponse'
        '400':
          description: 잘못된 요청
        '404':
          description: 댓글 없음
        '500':
          description: 서버 오류
    delete:
      tags:
        - Diary Comments
      summary: 댓글 삭제 (is_deleted = true)
      parameters:
        - name: diary_id
          in: path
          required: true
          schema:
            type: integer
        - name: comment_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: 잘못된 요청
        '404':
          description: 댓글 없음
        '500':
          description: 서버 오류
  # 좋아요(Like) API
  /api/diary/{diary_id}/like/:
    post:
      tags:
        - Diary Like
      summary: 일기 좋아요 추가
      parameters:
        - name: diary_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LikeResponse'
        '400':
          description: 잘못된 요청
        '404':
          description: 일기 없음
        '500':
          description: 서버 오류
    delete:
      tags:
        - Diary Like
      summary: 일기 좋아요 취소 (is_deleted = true)
      parameters:
        - name: diary_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: 잘못된 요청
        '404':
          description: 좋아요 없음
        '500':
          description: 서버 오류
  /api/frienddiary/{friend_id}/calendar/:
    get:
      summary: 친구의 다이어리 캘린더 조회
      tags:
        - FriendDiary
      parameters:
        - $ref: '#/components/parameters/friend_id'
      responses:
        '200':
          description: 날짜별 다이어리 개요 리스트 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CalendarDiary'
        '401':
          description: 인증 필요
        '403':
          description: 친구 관계가 아님
  /api/frienddiary/{friend_id}/date/{date}/:
    get:
      summary: 친구의 특정 날짜 다이어리 목록 조회
      tags:
        - FriendDiary
      parameters:
        - $ref: '#/components/parameters/friend_id'
        - name: date
          in: path
          required: true
          schema:
            type: string
            format: date
          description: '조회할 날짜 (YYYY-MM-DD)'
      responses:
        '200':
          description: 해당 날짜의 다이어리 리스트 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiaryList'
        '400':
          description: 잘못된 날짜 형식
        '401':
          description: 인증 필요
        '403':
          description: 친구 관계가 아님
  /api/frienddiary/{friend_id}/diary/{diary_id}/:
    get:
      summary: 친구 다이어리 상세 조회
      tags:
        - FriendDiary
      parameters:
        - $ref: '#/components/parameters/friend_id'
        - $ref: '#/components/parameters/diary_id'
      responses:
        '200':
          description: 다이어리 상세 정보 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiaryDetail'
        '401':
          description: 인증 필요
        '403':
          description: 친구 관계가 아님
        '404':
          description: 다이어리 없음
  /api/frienddiary/{friend_id}/diary/{diary_id}/comments/:
    post:
      summary: 친구 다이어리에 댓글 작성
      tags:
        - FriendDiaryComment
      parameters:
        - $ref: '#/components/parameters/friend_id'
        - $ref: '#/components/parameters/diary_id'
      requestBody:
        description: 댓글 내용
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentCreate'
      responses:
        '201':
          description: 댓글 작성 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: 잘못된 요청
        '401':
          description: 인증 필요
        '403':
          description: 친구 관계가 아님
  /api/frienddiary/{friend_id}/diary/{diary_id}/comments/{comment_id}/:
    patch:
      summary: 댓글 수정
      tags:
        - FriendDiaryComment
      parameters:
        - $ref: '#/components/parameters/friend_id'
        - $ref: '#/components/parameters/diary_id'
        - $ref: '#/components/parameters/comment_id'
      requestBody:
        description: 수정할 댓글 내용
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentCreate'
      responses:
        '200':
          description: 댓글 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: 잘못된 요청
        '401':
          description: 인증 필요
        '403':
          description: 친구 관계가 아님
    delete:
      summary: 댓글 삭제
      tags:
        - FriendDiaryComment
      parameters:
        - $ref: '#/components/parameters/friend_id'
        - $ref: '#/components/parameters/diary_id'
        - $ref: '#/components/parameters/comment_id'
      responses:
        '204':
          description: 댓글 삭제 성공 (내용 없음)
        '401':
          description: 인증 필요
        '403':
          description: 친구 관계가 아님
  /api/frienddiary/{friend_id}/diary/{diary_id}/like/:
    post:
      summary: 다이어리 좋아요 추가
      tags:
        - FriendDiaryLike
      parameters:
        - $ref: '#/components/parameters/friend_id'
        - $ref: '#/components/parameters/diary_id'
      responses:
        '201':
          description: 좋아요 추가 성공
        '401':
          description: 인증 필요
        '403':
          description: 친구 관계가 아님
    delete:
      summary: 다이어리 좋아요 취소
      tags:
        - FriendDiaryLike
      parameters:
        - $ref: '#/components/parameters/friend_id'
        - $ref: '#/components/parameters/diary_id'
      responses:
        '204':
          description: 좋아요 취소 성공
        '401':
          description: 인증 필요
        '403':
          description: 친구 관계가 아님
  /api/frienddiary/{friend_id}/diary/{diary_id}/comments/{comment_id}/like/:
    post:
      summary: 댓글 좋아요 추가
      tags:
        - FriendDiaryCommentLike
      parameters:
        - $ref: '#/components/parameters/friend_id'
        - $ref: '#/components/parameters/diary_id'
        - $ref: '#/components/parameters/comment_id'
      responses:
        '201':
          description: 댓글 좋아요 추가 성공
        '401':
          description: 인증 필요
        '403':
          description: 친구 관계가 아님
    delete:
      summary: 댓글 좋아요 취소
      tags:
        - FriendDiaryCommentLike
      parameters:
        - $ref: '#/components/parameters/friend_id'
        - $ref: '#/components/parameters/diary_id'
        - $ref: '#/components/parameters/comment_id'
      responses:
        '204':
          description: 댓글 좋아요 취소 성공
        '401':
          description: 인증 필요
        '403':
          description: 친구 관계가 아님
  # 친구초대(Friends, Qr) API
  /api/friends/invite/:
    post:
      tags:
          - Diary Friends
      summary: 친구 초대(QR로만)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FriendInviteRequest'
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendInviteResponse'
        '400':
          description: 잘못된 요청
        '404':
          description: 유저 없음
        '500':
          description: 서버 오류
  /api/friends/{friend_id}/accept/:
    post:
      tags:
          - Diary Friends
      summary: 친구 요청 수락
      parameters:
        - name: friend_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendResponse'
        '400':
          description: 잘못된 요청
        '404':
          description: 친구 요청 없음
        '500':
          description: 서버 오류
  /api/friends/{friend_id}/reject/:
    post:
      tags:
          - Diary Friends
      summary: 친구 요청 거절
      parameters:
        - name: friend_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
        '400':
          description: 잘못된 요청
        '404':
          description: 친구 요청 없음
        '500':
          description: 서버 오류
  /api/friends/:
    get:
      summary: 친구 목록 조회
      tags:
        - Friends
      parameters:
        - name: status
          in: query
          description: |
            조회할 친구 관계 상태
            (pending: 요청 대기, accepted: 친구, rejected: 거절됨)
          schema:
            type: string
            enum: [pending, accepted, rejected]
            default: accepted
      responses:
        '200':
          description: 친구 목록 반환
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FriendResponse'
        '400':
          description: 잘못된 status 파라미터
        '401':
          description: 인증 필요
        '500':
          description: 서버 오류
  /api/friends/{friend_id}/:
    delete:
      summary: 친구 삭제
      tags:
        - Friends
      parameters:
        - name: friend_id
          in: path
          required: true
          schema:
            type: integer
          description: 삭제할 친구의 사용자 ID
      responses:
        '204':
          description: 친구 삭제 성공
        '401':
          description: 인증 필요
        '404':
          description: 삭제할 친구 관계가 없습니다.
        '500':
          description: 서버 오류
  /api/emotions/:
    get:
      summary: 감정 목록 조회
      tags:
        - 감정
      responses:
        '200':
          description: 성공 – 감정 목록 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmotionListResponse'
        '400':
          description: 잘못된 요청
        '404':
          description: 리소스 없음
        '500':
          description: 서버 오류
  /api/emotion/trend/:
    get:
      summary: 감정 변화 그래프
      tags:
        - 통계/감정 변화
      parameters:
        - name: from
          in: query
          description: 조회 시작일 (YYYY-MM-DD)
          required: true
          schema:
            type: string
            format: date
        - name: to
          in: query
          description: 조회 종료일 (YYYY-MM-DD)
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: 성공 – 감정 변화 데이터 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmotionTrendResponse'
        '400':
          description: 잘못된 요청
        '404':
          description: 리소스 없음
        '500':
          description: 서버 오류
  /api/emotion/count/:
    get:
      summary: 감정별 사용량 그래프
      tags:
        - 통계/감정 변화
      parameters:
        - name: from
          in: query
          description: 조회 시작일 (YYYY-MM-DD)
          required: true
          schema:
            type: string
            format: date
        - name: to
          in: query
          description: 조회 종료일 (YYYY-MM-DD)
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: 성공 – 감정별 사용량 데이터 반환
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmotionCountResponse'
        '400':
          description: 잘못된 요청
        '404':
          description: 리소스 없음
        '500':
          description: 서버 오류
  /api/notifications/:
    get:
      summary: 알림 조회
      tags:
       - 알림 조회/생성
      responses:
        '200':
          description: 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationListResponse'
        '400':
          description: 잘못된 요청
        '404':
          description: 리소스 없음
        '500':
          description: 서버 오류
    post:
        summary: 알림 생성
        tags:
          - 알림 조회/생성
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationCreateRequest'
        responses:
          '201':
            description: 알림 생성 성공
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/NotificationResponse'
          '400':
            description: 잘못된 요청
          '500':
            description: 서버 오류
  /api/notifications/{notification_id}/:
    patch:
      summary: 알림 수정
      tags:
        - 알림 조회/생성
      parameters:
        - name: notification_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationUpdateRequest'
      responses:
        '200':
          description: 알림 수정 성공
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
        '400':
          description: 잘못된 요청
        '404':
          description: 알림 없음
        '500':
          description: 서버 오류
    delete:
      summary: 알림 삭제
      tags:
        - 알림 조회/생성
      parameters:
        - name: notification_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 알림 삭제 성공
        '400':
          description: 잘못된 요청
        '404':
          description: 알림 없음
        '500':
          description: 서버 오류
components:
  securitySchemes:
   bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    friend_id:
      name: friend_id
      in: path
      required: true
      schema:
        type: integer
      description: 친구 사용자 ID
    diary_id:
      name: diary_id
      in: path
      required: true
      schema:
        type: integer
      description: 다이어리 ID
    comment_id:
      name: comment_id
      in: path
      required: true
      schema:
        type: integer
      description: 댓글 ID
  schemas:
    DiaryCreateRequest:
      type: object
      properties:
        emotion_id:
          type: integer
        content:
          type: string
        visibility:
          type: boolean
        images:
          type: array
          items:
            $ref: '#/components/schemas/DiaryImageResponse'
        created_at:
          type: string
          format: date-time
      required:
        - emotion_id
        - content
        - visibility
        - created_at
    DiaryUpdateRequest:
      type: object
      properties:
        emotion_id:
          type: integer
        content:
          type: string
        update_at:
          type: string
          format: date-time
    DiaryResponse:
      type: object
      properties:
        diary_id:
          type: integer
        emotion_id:
          type: integer
        user:
          $ref: '#/components/schemas/UserResponse'
        content:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        like_count:
          type: integer
          description: "일기에 대한 총 좋아요 수"
    DiaryDetailResponse:
      type: object
      properties:
        diary_id:
          type: integer
        user:
          $ref: '#/components/schemas/UserResponse'
        emotion:
          $ref: '#/components/schemas/EmotionResponse'
        content:
          type: string
        visibility:
          type: boolean
        images:
          type: array
          items:
            $ref: '#/components/schemas/DiaryImageResponse'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        comments:
          type: array
          items:
            $ref: '#/components/schemas/CommentResponse'
        like_count:
          type: integer
          description: "일기에 대한 총 좋아요 수"
    UserResponse:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        nickname:
          type: string
          nullable: true
        birthday:
          type: string
          format: date
          nullable: true
        email:
          type: string
          format: email
          nullable: true
        phone_num:
          type: string
          nullable: true
        profile:
          type: string
          format: uri
          nullable: true
        created_at:
          type: string
          format: date-time
      required:
        - id
        - username
        - created_at
    UserUpdateRequest:
      type: object
      properties:
        nickname:
          type: string
        birthday:
          type: string
          format: date
        email:
          type: string
          format: email
        phone_num:
          type: string
        profile:
          type: string
          format: binary
      # 모든 필드를 선택적으로 전송 가능
    OAuthLoginRequest:
      type: object
      properties:
        code:
          type: string
          description: OAuth 인증 코드
        redirect_uri:
          type: string
          description: OAuth 리디렉션 URI
      required:
        - code
        - redirect_uri
    OAuthLoginResponse:
      type: object
      properties:
        token:
          type: string
          description: 액세스 토큰 (JWT)
        refresh_token:
          type: string
          description: 리프레시 토큰
        user:
          $ref: '#/components/schemas/UserResponse'
      required:
        - token
        - refresh_token
        - user
    DiaryImageResponse:
      type: object
      properties:
        diary_image_id:
          type: integer
        image_url:
          type: string
    CommentResponse:
      type: object
      properties:
        comment_id:
          type: integer
        user_id:
          type: integer
        content:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    LikeResponse:
      type: object
      properties:
        like_id:
          type: integer
        diary_id:
          type: integer
        user_id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    CalendarResponse:
      type: object
      properties:
        date:
          type: string
          format: date
        emotion_id:
          type: integer
        diary_id:
          type: integer
    CommentCreateRequest:
      type: object
      properties:
        content:
          type: string
      required:
        - content
    CommentUpdateRequest:
      type: object
      properties:
        content:
          type: string
    FriendInviteRequest:
      type: object
      properties:
        invite_type:
          type: string
          enum: [qr]  # QR만 허용
        invite_code:
          type: string
          description: "QR 코드 값"
      required:
        - invite_type
        - invite_code
    FriendInviteResponse:
      type: object
      properties:
        friend_id:
          type: integer
        status:
          type: string
        invited_at:
          type: string
          format: date-time
    FriendResponse:
      type: object
      properties:
        id:
          type: integer
          description: '사용자 ID'
        nickname:
          type: string
          description: '친구의 닉네임'
        profile:
          type: string
          format: uri
          description: '친구 프로필 이미지 URL'
      required:
        - id
        - nickname
        - profile
    FriendListResponse:
      type: object
      properties:
        id:
          type: integer
          example: 123
        nickname:
          type: string
          example: 감자짱
        profile:
          type: string
          format: uri
          example: https://example.com/profile.jpg
    EmotionListResponse:
      type: array
      items:
        type: object
        properties:
          emotion:
            $ref: '#/components/schemas/EmotionResponse'
    EmotionTrendResponse:
      type: object
      properties:
        emotion:
          $ref: '#/components/schemas/EmotionResponse'
        labels:
          type: array
          items:
            type: string
        values:
          type: array
          items:
            type: integer
    EmotionCountResponse:
      type: array
      items:
        type: object
        properties:
          emotion:
            $ref: '#/components/schemas/EmotionResponse'
          count:
            type: integer
    NotificationListResponse:
      type: array
      items:
        properties:
          notification:
            $ref: '#/components/schemas/NotificationResponse'
    EmotionResponse:
      type: object
      properties:
        emotion_id:
          type: integer
        emoji:
          type: string
        emotion:
          type: string
    NotificationResponse:
      type: object
      properties:
        user_id:
          type: integer
        notification_id:
          type: integer
        notificationtype:
          type: string
        notificationmessage:
          type: string
        created_at:
          type: string
    NotificationCreateRequest:
      type: object
      properties:
        notificationtype:
          type: string
        notificationmessage:
          type: string
      required:
        - notificationtype
        - notificationmessage
    NotificationUpdateRequest:
      type: object
      properties:
        notificationtype:
          type: string
        notificationmessage:
          type: string
    CalendarDiary:
      type: object
      properties:
        date:
          type: string
          format: date
        emotion_id:
          type: integer
          nullable: true
        emoji:
          type: string
          nullable: true
        diary_id:
          type: integer
      required:
        - date
        - diary_id
    DiaryList:
      type: object
      properties:
        id:
          type: integer
        user:
          type: object
        content:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        emotion:
          type: object
          nullable: true
        like_count:
          type: integer
    DiaryDetail:
      type: object
      properties:
        id:
          type: integer
        user:
          type: object
        content:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        emotion:
          type: object
          nullable: true
        images:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              image_url:
                type: string
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        like_count:
          type: integer
    CommentCreate:
      type: object
      properties:
        content:
          type: string
      required:
        - content
    Comment:
      type: object
      properties:
        id:
          type: integer
        user:
          type: object
        content:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        like_count:
          type: integer